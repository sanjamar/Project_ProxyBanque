package com.gtm.proxybanque.test;


import static org.junit.Assert.assertEquals;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import org.junit.Assert;
import org.junit.Test;

import com.gtm.proxybanque.constants.ApplicationConstants;
import com.gtm.proxybanque.metier.Client;
import com.gtm.proxybanque.metier.Compte;
import com.gtm.proxybanque.metier.Conseiller;
import com.gtm.proxybanque.service.ConseillerService;

public class TestConseillerService {

	@Test
	public void testTransferFromCompteToCompte() {
		
		//fail("Not yet implemented");
		
		ConseillerService cs = new ConseillerService();
		Conseiller conseiller = new Conseiller();
		Client client1 = cs.createClient(conseiller, "Dupont", "Jacques", "2 rue des lilas", 31000, "Toulouse", "0645382989");
		Client client2 = cs.createClient(conseiller, "Dare", "Anne", "52 rue premier", 21000, "Split", "0795382945");
		Compte compte1 = cs.createCompteToClient(client1, 637, 100.00f, ApplicationConstants.COMPTE_COURANT);
		Compte compte2 = cs.createCompteToClient(client2, 643, 50.00f, ApplicationConstants.COMPTE_COURANT);
		
		Map<Integer,Compte> comptes = new HashMap<>();
		comptes.put(compte1.getNumeroCompte(), compte1);
		comptes.put(compte2.getNumeroCompte(), compte2);
		
		Scanner sc = new Scanner(System.in);
		
		
		System.out.println("Enter number of account to Debit: ");
		int compteToDebitNumber = sc.nextInt();
		Compte compteToDebit = comptes.get(compteToDebitNumber);
		
		
		System.out.println("Enter number of accout to Credit: ");
		int compteToCreditNumber= sc.nextInt();
		Compte compteToCredit = comptes.get(compteToCreditNumber);
		
		
		System.out.println("How much money do you want to transfer? ");
		float amount = sc.nextFloat();
				
		cs.transferFromCompteToCompte(compteToDebit, compteToCredit, amount);
		
		assertEquals("Error with compteToDebit ", (compteToDebit.getSolde() - amount), compteToDebit.getSolde(), 0);
		assertEquals("Error with compteToCredit ", (compteToCredit.getSolde() + amount), compteToCredit.getSolde(), 0);
		
	}

}
